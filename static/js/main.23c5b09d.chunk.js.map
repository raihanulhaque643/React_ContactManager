{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","prototype","PropTypes","string","isRequired","func","defaultProps","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.23c5b09d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload\r\n                )\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data})\r\n        \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    };\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onShowClick = (e) => {\r\n        // console.log(e.target);\r\n        this.setState({ showContactInfo: !this.state.showContactInfo })\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } catch(e){\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n        \r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} \r\n                            <i \r\n                            onClick={this.onShowClick} \r\n                            className=\"fas fa-sort-down\"\r\n                            style={{ cursor: 'pointer' }}>\r\n                            </i>\r\n                            <i\r\n                            onClick={this.onDeleteClick.bind(this, id, dispatch)} \r\n                            className=\"fas fa-times\"\r\n                            style={{ cursor: 'pointer', float: 'right', color: 'red' }}    \r\n                            />\r\n                            <Link to={`contact/edit/${id}`}>\r\n                                <i \r\n                                className=\"fas fa-pencil-alt\"\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    float: 'right',\r\n                                    color: 'black',\r\n                                    marginRight: '1rem'\r\n                                }}\r\n                                ></i>\r\n                            </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } =value;\r\n                    return (\r\n                        <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact</span> List\r\n                        </h1>\r\n                        {contacts.map(contact => (\r\n                        <Contact \r\n                        key={contact.id}\r\n                        contact={contact} \r\n                        />\r\n                        ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                type={type} \r\n                name={name}\r\n                className={classnames(\"form-control form-control-lg\", {'is-invalid': error})}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.prototype = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import {v1 as uuid} from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for errors \r\n        if (name === '') {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        \r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n        \r\n\r\n        \r\n\r\n        // Clear State \r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                         <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                            \r\n                            <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                            />\r\n\r\n                            <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                            />\r\n\r\n                            <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                            />\r\n                            \r\n                            <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\"/>\r\n                        </form>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import {v1 as uuid} from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for errors \r\n        if (name === '') {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n        // Clear State \r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                         <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                            \r\n                            <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                            />\r\n\r\n                            <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                            />\r\n\r\n                            <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                            />\r\n                            \r\n                            <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light\"/>\r\n                        </form>\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div className=\"\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                            <i className=\"fas fa-home\"></i>\r\n                            Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"></i>\r\n                            About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page doesn't exist.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title:'',\r\n        body: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }))\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('componentDidMount...');\r\n    // }\r\n\r\n    // componentWillUpdate(){\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('componentWillReceiveProps...');\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(nextProps,prevState) {\r\n    //     return null;\r\n    // } \r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n    //     return null;\r\n    // }\r\n\r\n    render() {\r\n        const { title, body } = this.state\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Contacts from './components/contacts/Contacts';\r\nimport AddContact from './components/contacts/AddContact';\r\nimport EditContact from './components/contacts/EditContact';\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport NotFound from './components/pages/NotFound';\r\nimport Test from './components/test/Test';\r\n\r\nimport { Provider } from './context'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/test\" component={Test} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n      </Router>\r\n    </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}